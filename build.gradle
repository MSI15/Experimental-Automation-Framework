/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'msi15' at '8/4/16 10:18 AM' with Gradle 2.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.12/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
// Apply the Eclipse plugin to add support for Eclipse
apply plugin: 'eclipse'
//Apply plugin for IntelliJ 
apply plugin: 'idea'
apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

buildscript {
    repositories {
        maven {  url 'http://jcenter.bintray.com' }
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
    }
}
// In this section you declare the dependencies for your production and test code
dependencies {

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    
    compile 'org.seleniumhq.selenium:selenium-java:2.53.+'
    compile 'info.cukes:cucumber-java:1.2.+'
    compile 'info.cukes:cucumber-junit:1.2.+'
    compile 'info.cukes:cucumber-core:1.2.+'
    compile 'org.springframework:spring-core:4.2.5.RELEASE'
    compile 'log4j:log4j:1.2.17'
}

// configure cucumber to be part of runtime test
configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

publishing {
    publications {
        jar(MavenPublication) {
            groupId packageName
            version = libraryVersion + "$System.env.LIBRARY_TAG"
            artifactId = projectName

            // Tell maven to prepare the generated "*.jar" file for publishing
            artifact("$buildDir/libs/${project.getName()}.jar")
        }
    }
}

artifactory {
    publish {
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('jar')
            publishArtifacts = true

            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team': 'varenberg']

            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}
    
task testWeb(){
   dependsOn assemble, compileTestJava
   
   doLast{
          println 'Starting Web test'         
          javaexec {
                   main = "cucumber.api.cli.Main"
                   classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
                   args = ['--plugin', 'pretty', '--plugin', 'html:reports/html-report/ios', '--glue', 'stepdefinitions', 'src/test/resources', '--tags', '@navpg' , '--tags', '@ios']
          }     
   }
}

